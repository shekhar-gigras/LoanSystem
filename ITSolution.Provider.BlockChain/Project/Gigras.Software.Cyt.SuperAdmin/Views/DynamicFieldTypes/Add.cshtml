@using Gigras.Software.Database.Cyt.Entity.Models
@model FieldType
@{
    ViewBag.Title = "Field Types";
}
<div class="full-page-heading">
    Add Field Type for forms
</div>
<div class="post d-flex flex-column-fluid" id="kt_post">
    <!--begin::Container-->
    <div id="kt_content_container" class="container-xxl">
        <div id="form-wrapper">
            <form asp-action="AddSubmit" method="post" class="form">
                <div class="form-group">
                    <label for="CtrlType">Ctrl Type</label>
                    <select class="form-control" id="CtrlType" name="CtrlType">
                        @foreach (var item in ViewBag.CtrlList as List<DynamicCtrl>)
                        {
                            <option value="@item.CtrlType">@item.CtrlType</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>Field Name</label>
                    <input asp-for="FieldName" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>Default Value</label>
                    <input asp-for="DefaultValue" class="form-control" />
                </div>

@*                 <div class="form-group">
                    <label>Min Value</label>
                    <input asp-for="MinValue" class="form-control" type="number" step="any" />
                </div>
                <div class="form-group">
                    <label>Max Value</label>
                    <input asp-for="MaxValue" class="form-control" type="number" step="any" />
                </div> *@
                <div class="form-group">
                    <label>Steps</label>
                    <input asp-for="Steps" class="form-control" type="number" step="0.0001" />
                </div>
                <div class="form-group">
                    <label>Max Length</label>
                    <input asp-for="MaxLength" class="form-control" type="number" step="any" />
                </div>
                @*                 <div class="form-group">
                <label>Range Start</label>
                <input asp-for="RangeStart" class="form-control" type="number" step="any" />
                </div>
                <div class="form-group">
                <label>Range End</label>
                <input asp-for="RangeEnd" class="form-control" type="number" step="any" />
                </div>
                *@
                <div class="form-group">
                    <label>Description</label>
                    <textarea asp-for="FieldDescription" class="form-control" required></textarea>
                </div>
                <div class="form-group">
                    <label for="BlockChainFieldId">BlockChain Field</label>
                    <select class="form-control" id="BlockChainFieldId" name="BlockChainFieldId">
                        <option value="">Select an option</option>
                        @foreach (var item in ViewBag.BlockChainFields as List<DynamicBlockChainField>)
                        {
                            <option value="@item.Id">
                                @item.BlockChainField
                            </option>
                        }

                        <!-- Options will be populated dynamically here -->
                    </select>
                </div>
                <div class="form-group">
                    <div class="form-check">
                        <input asp-for="HasOptions" class="form-check-input" type="checkbox" id="hasOptionsCheckbox" />
                        <label class="form-check-label" for="hasOptionsCheckbox">Has Options</label>
                    </div>
                </div>
                <div class="form-group" id="optionsDiv" style="display: none;">
                    <label for="FieldTypeOptionId">Options</label>
                    <select class="form-control" id="FieldTypeOptionId" name="FieldTypeOptionId">
                        <option value="">Select an option</option>
                        @foreach (var item in ViewBag.Options as List<FieldOption>)
                        {
                            <option value="@item.Id">
                                @item.OptionName
                            </option>
                        }

                        <!-- Options will be populated dynamically here -->
                    </select>
                </div>
                <div class="form-group">
                    <div class="form-check">
                        <input asp-for="RequiresScript" class="form-check-input" type="checkbox" id="requiresScriptCheckbox" />
                        <label class="form-check-label" for="requiresScriptCheckbox">Required Validations</label>
                    </div>
                </div>

                <div class="form-group" id="validationDiv" style="display: none;">
                    <label for="FieldValidations">Validations</label>
                    <div style="height: 400px; overflow-y: auto;">
                        <ul class="list-group">
                            @foreach (var item in ViewBag.Validations as List<FieldValidation>)
                            {
                                <li class="list-group-item">
                                    <input type="checkbox"
                                           id="validation-@item.Id"
                                           name="FieldValidations"
                                           value="@item.Id" />
                                    <label for="validation-@item.Id">@item.ValidationName</label>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="form-group" id="validationDiv" style="display: none;">
                    <label for="FieldValidations">Validations</label>
                    <div style="height: 400px; overflow-y: auto;">
                        <ul class="list-group">
                            @foreach (var item in ViewBag.BlockChainFields as List<DynamicBlockChainField>)
                            {
                                <li class="list-group-item">
                                    <input type="checkbox"
                                           id="validation-@item.Id"
                                           name="FieldValidations"
                                           value="@item.Id" />
                                    <label for="validation-@item.Id">@item.BlockChainField</label>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <a href="/sadmin/dynamic-fieldtype" class="btn btn-secondary">Back</a>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        // Initially check if the checkbox is checked and display options accordingly
        if ($("#hasOptionsCheckbox").prop("checked")) {
            $("#optionsDiv").show();
        } else {
            $("#optionsDiv").hide();
        }

        // Event handler for checkbox change
        $("#hasOptionsCheckbox").change(function () {
            if ($(this).prop("checked")) {
                // Show dropdown and fetch options from the API
                $("#optionsDiv").show();
                fetchOptions();  // Call function to fetch options
            } else {
                // Hide dropdown and reset the selection
                $("#optionsDiv").hide();
                $("#FieldTypeOptionId").empty().append('<option value="">Select an option</option>'); // Reset dropdown options
            }
        });

        // Function to fetch options from the API
        function fetchOptions() {
            $.ajax({
                url: '/sadmin/api/getoptions', // Replace with your API endpoint
                method: 'GET',
                success: function (data) {
                    var optionsHtml = '<option value="">Select an option</option>';
                    data.forEach(function (item) {
                        optionsHtml += '<option value="' + item.id + '">' + item.optionName + '</option>';
                    });
                    $("#FieldTypeOptionId").html(optionsHtml);
                },
                error: function (error) {
                    console.error("Error fetching options:", error);
                }
            });
        }

        // Initially check if the checkbox is checked and display options accordingly
        if ($("#requiresScriptCheckbox").prop("checked")) {
            $("#validationDiv").show();
        } else {
            $("#validationDiv").hide();
        }

        // Event handler for checkbox change
        $("#requiresScriptCheckbox").change(function () {
            if ($(this).prop("checked")) {
                // Show dropdown and fetch validation options from the API
                $("#validationDiv").show();
                fetchValidationOptions();  // Call function to fetch options
            } else {
                // Hide dropdown and reset the selection
                $("#validationDiv").hide();
                $("#FieldValidations").empty(); // Reset the multi-select dropdown
            }
        });

        // Function to fetch validation options from the API
        function fetchValidationOptions() {
            $.ajax({
                url: '/sadmin/api/getvalidations', // Replace with your actual API endpoint
                method: 'GET',
                success: function (data) {
                    var optionsHtml = '';
                    data.forEach(function (item) {
                        optionsHtml += '<option value="' + item.id + '">' + item.validationName + '</option>';
                    });
                    $("#FieldValidations").html(optionsHtml);
                },
                error: function (error) {
                    console.error("Error fetching validation options:", error);
                }
            });
        }
    });
</script>